#include <algorithm>#include <iostream>#include <map>#include <string>#include <utility>#include <vector>std::map<char, int> seqLen;bool comp(const std::string &lh, const std::string &rh) {  int l_len, r_len;  int n;  bool ret;  l_len = lh.length();  r_len = rh.length();  if (l_len < r_len) {    n = l_len - 1;    ret = true;  } else {    n = r_len - 1;    ret = false;  }  // std::cout << n << std::endl;  for (int i = 0; i < n + 1; i++) {    // std::cout << lh << " " << rh << std::endl;    // std::cout << i << std::endl;    // std::cout << lh[i] << " " << rh[i] << std::endl;    // std::cout << seqLen[lh[i]] << " " << seqLen[rh[i]] << std::endl;    if (seqLen[lh[i]] < seqLen[rh[i]]) {      // std::cout << "true" << std::endl;      return true;    } else if (seqLen[lh[i]] > seqLen[rh[i]]) {      // std::cout << "false" << std::endl;      return false;    }  }  return ret;}int main() {  std::string X;  int N;  std::cin >> X >> N;  std::vector<std::string> vec(N);  std::string input;  for (int i = 0; i < N; i++) {    std::cin >> input;    vec[i] = input;  }  for (int i = 0; i < 26; i++) {    seqLen[X[i]] = i;  }  std::sort(vec.begin(), vec.end(), comp);  for (auto i : vec) {    std::cout << i << std::endl;  }}